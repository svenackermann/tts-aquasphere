players = {
  Red = {
    scientist_GUID = 'c3f106',
    initBot_GUID = '7093d9',
    initSubmarine_GUID = 'f322bd',
    labBotPos = {42.64, 1.49, 16.26},
    engineer_GUID = '6c48a0',
    orderBot_GUID = '93cf49',
    countMarker_GUID = 'f362b3',
    pointsMarker_GUID = 'c2e284',
    timeZone_GUID = 'b49c0d',
    timeProgramZone_GUID = 'e42f7a',
    labZone_GUID = '6d4e6f'
  },
  White = {
    scientist_GUID = 'b8c84b',
    initBot_GUID = '5d7798',
    initSubmarine_GUID = 'e9e19f',
    labBotPos = {29.34, 1.48, -16.26},
    engineer_GUID = 'dce324',
    orderBot_GUID = 'b41cd6',
    countMarker_GUID = '416d17',
    pointsMarker_GUID = 'a78c23',
    timeZone_GUID = 'a5ad52',
    timeProgramZone_GUID = '4ce16d',
    labZone_GUID = 'b1c7d7'
  },
  Blue = {
    scientist_GUID = '1b9eb6',
    initBot_GUID = '0b1fba',
    initSubmarine_GUID = 'ff537d',
    labBotPos = {-42.65, 1.49, -16.24},
    engineer_GUID = 'decf71',
    orderBot_GUID = '1551b8',
    countMarker_GUID = 'ef58a9',
    pointsMarker_GUID = 'd6a886',
    timeZone_GUID = '7997ff',
    timeProgramZone_GUID = '1e34c4',
    labZone_GUID = '593d4b'
  },
  Yellow = {
    scientist_GUID = '3f9686',
    initBot_GUID = 'ce340c',
    initSubmarine_GUID = 'bea65d',
    labBotPos = {-29.38, 1.49, 16.23},
    engineer_GUID = '4e9fd3',
    orderBot_GUID = '0420ec',
    countMarker_GUID = '733077',
    pointsMarker_GUID = '34aa8d',
    timeZone_GUID = '3daecd',
    timeProgramZone_GUID = 'f52aed',
    labZone_GUID = '786fca'
  }
}

local baseLabsBag_GUID = '173592'
local greyBotsBag_GUID = 'c2a84e'

local botActionOrder = {
  lab = 1,
  time = 2,
  crystal = 3,
  octopod = 4,
  submarine = 5,
  research = 6,
  bot = 7
}

local boardSectorBotActions = {
  A = 'research',
  B = 'lab',
  C = 'time',
  D = 'octopod',
  E = 'submarine',
  F = 'crystal'
}

local boardScientistPos = {
  {0.12, 1.83, 13.59},
  {11.72, 1.83, 6.71},
  {11.79, 1.83, -6.81},
  {-0.08, 1.83, -13.90},
  {-11.63, 1.83, -6.85},
  {-11.59, 1.83, 6.46}
}

local function placeInitBotAndScientist(player, baseLabLetter, sectorIndex, rotY)
  local action = boardSectorBotActions[baseLabLetter]
  local deltaX = (botActionOrder[action] - 1) * 1.5
  if rotY == 0 then
    deltaX = -deltaX
  end
  local initBotPos = Vector(player.labBotPos)
  initBotPos.x = initBotPos.x + deltaX
  getObjectFromGUID(player.initBot_GUID).setPositionSmooth(initBotPos, false)

  local scientistPos = boardScientistPos[sectorIndex]
  getObjectFromGUID(player.scientist_GUID).setPositionSmooth(scientistPos, false)
end

function shufflePlayers(thePlayers)
  local startPlayer = math.random(1, #thePlayers)
  if startPlayer == 1 then
    return thePlayers
  end
  local shuffled = {unpack(thePlayers, startPlayer)}
  for i = 1, startPlayer - 1 do
    table.insert(shuffled, thePlayers[i])
  end
  return shuffled
end

local function placeGreyBot(sectorIndex, remainingBaseLabs)
  if remainingBaseLabs == 3 then
    local bot = getObjectFromGUID(greyBotsBag_GUID).takeObject({smooth = false})
    board.placeBotToLoad(sectorIndex, bot)
    bot.setLock(true)
  end
end

local function setupRemainingSectors(baseLabsBag, sectorsOrder, sectorIndices, submarines)
  local remainingBaseLabs = baseLabsBag.getObjects()
  local size = #remainingBaseLabs

  local nextLetter = gmtools.parseGmNotes(remainingBaseLabs[size].gm_notes).letter
  local sectorIndex = sectorsOrder[nextLetter]
  board.placeOctopods(sectorIndex, 2)
  board.placeCrystals(sectorIndex, 1)
  placeGreyBot(sectorIndex, size)

  nextLetter = gmtools.parseGmNotes(remainingBaseLabs[size - 1].gm_notes).letter
  sectorIndex = sectorsOrder[nextLetter]
  board.placeOctopods(sectorIndex, 3)
  board.placeCrystals(sectorIndex, 2)
  placeGreyBot(sectorIndex, size)

  if size > 2 then
    nextLetter = gmtools.parseGmNotes(remainingBaseLabs[size - 2].gm_notes).letter
    sectorIndex = sectorsOrder[nextLetter]
    placeGreyBot(sectorIndex, size)

    local greySubmarinesBag = getObjectFromGUID(greySubmarinesBag_GUID)
    table.insert(sectorIndices, sectorIndex)
    table.insert(submarines, greySubmarinesBag.takeObject({smooth = false}))

    if size > 3 then
      nextLetter = gmtools.parseGmNotes(remainingBaseLabs[size - 3].gm_notes).letter
      table.insert(sectorIndices, sectorsOrder[nextLetter])
      table.insert(submarines, greySubmarinesBag.takeObject({smooth = false}))
    end
  end
end

local function assignTime(player, amount)
  --TODO check capacity
  local timeZone = getObjectFromGUID(player.timeZone_GUID)
  local pos = timeZone.getPosition()
  pos.y = 3
  local bag = getObjectFromGUID(timeBag_GUID)
  for i = 1, amount do
    bag.takeObject({
      position = pos,
      rotation = timeZone.getRotation()
    })
    pos.y = pos.y + 0.5
  end
end

local function assignStartTime(player, sectorIndex, sectors)
  local prevSector = (sectorIndex - 2) % 6 + 1
  local amount = 4
  if sectors[sectorIndex] == 'F' or sectors[prevSector] == 'F' then
    amount = 3
  end
  assignTime(player, amount)
end

function players.setup(thePlayers, sectors)
  local baseLabsBag = getObjectFromGUID(baseLabsBag_GUID)
  baseLabsBag.shuffle()

  local sectorsOrder = {}
  for i, v in ipairs(sectors) do
    sectorsOrder[v] = i
  end

  local shuffledPlayers = shufflePlayers(thePlayers)
  local sectorIndices = {}
  local submarines = {}
  for i, color in ipairs(shuffledPlayers) do
    local player = players[color]
    local labZone = getObjectFromGUID(player.labZone_GUID)
    local labPos = labZone.getPosition()
    local labRot = labZone.getRotation()
    labPos.y = 1.06
    local baseLab = baseLabsBag.takeObject({
      position = labPos,
      rotation = labRot
    })
    baseLab.setLock(true)

    local baseLabLetter = gmtools.parse(baseLab).letter
    local sectorIndex = sectorsOrder[baseLabLetter]

    placeInitBotAndScientist(player, baseLabLetter, sectorIndex, labRot.y)
    board.placeOctopods(sectorIndex, 1)
    board.placeCrystals(sectorIndex, 1)
    board.placeTime(sectorIndex, 4)
    sectorIndices[i] = sectorIndex
    submarines[i] = getObjectFromGUID(player.initSubmarine_GUID)
    assignStartTime(player, sectorIndex, sectors)
  end

  setupRemainingSectors(baseLabsBag, sectorsOrder, sectorIndices, submarines)
  board.placeSubmarines(sectorIndices, submarines)

  return shuffledPlayers
end

function players.nextRound()
  for _, player in pairs(players) do
    local times = gmtools.getObjectsFromZone(player.timeProgramZone_GUID, {type = 'time'})
    for _, time in ipairs(times) do
      time.destruct()
    end
  end
end
