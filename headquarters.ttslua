headquarters = {}

local nextProgramCardZone_GUID = '38a0c6'

local programTiles_GUIDs = {
  lab = '030cb4',
  time = '426956',
  crystal = 'eebb92',
  octopod = '715fc2',
  submarine = '321819',
  research = 'f8d224',
  bot = '9ecb7e',
}

local programPositions = {
  {-37.46, 1.16, -3.17},
  {-28.64, 1.16, -3.20},
  {-38.51, 1.16, -0.02},
  {-27.63, 1.16, 0.01},
  {-36.82, 1.16, 3.89},
  {-33.08, 1.16, 5.39},
  {-29.33, 1.16, 3.86}
}

local programCardSetups = {
  {
    {'time', 'submarine', 'bot', 'lab', 'research', 'crystal', 'octopod'},
    {'research', 'octopod', 'bot', 'lab', 'submarine', 'crystal', 'time'}
  },
  {
    {'research', 'lab', 'octopod', 'time', 'submarine', 'bot', 'crystal'},
    {'research', 'submarine', 'lab', 'crystal', 'bot', 'octopod', 'time'}
  },
  {
    {'research', 'bot', 'submarine', 'octopod', 'lab', 'time', 'crystal'},
    {'research', 'bot', 'submarine', 'octopod', 'lab', 'time', 'crystal'}
  },
  {
    {'crystal', 'bot', 'submarine', 'research', 'lab', 'octopod', 'time'},
    {'lab', 'time', 'submarine', 'research', 'octopod', 'bot', 'crystal'}
  },
  {
    {'lab', 'crystal', 'time', 'bot', 'submarine', 'research', 'octopod'},
    {'crystal', 'bot', 'research', 'time', 'submarine', 'lab', 'octopod'}
  },
  {
    {'time', 'octopod', 'crystal', 'research', 'lab', 'submarine', 'bot'},
    {'submarine', 'octopod', 'time', 'crystal', 'lab', 'research', 'bot'}
  },
  {
    {'submarine', 'time', 'octopod', 'bot', 'research', 'lab', 'crystal'},
    {'crystal', 'octopod', 'lab', 'submarine', 'research', 'time', 'bot'}
  }
}

local passOrderZones_GUIDs = {
  'b5dbde',
  'ea25be',
  '1e0f44',
  '4edc7d'
}

local turnOrderZones_GUIDs = {
  'c48b5b',
  '5c5b58',
  'ff677c',
  '8cd6a0'
}

local playerFigures = {
  Red = {
    engineer_GUID = '6c48a0',
    orderBot_GUID = '93cf49',
    countMarker_GUID = 'f362b3',
    pointsMarker_GUID = 'c2e284'
  },
  White = {
    engineer_GUID = 'dce324',
    orderBot_GUID = 'b41cd6',
    countMarker_GUID = '416d17',
    pointsMarker_GUID = 'a78c23'
  },
  Blue = {
    engineer_GUID = 'decf71',
    orderBot_GUID = '1551b8',
    countMarker_GUID = 'ef58a9',
    pointsMarker_GUID = 'd6a886'
  },
  Yellow = {
    engineer_GUID = '4e9fd3',
    orderBot_GUID = '0420ec',
    countMarker_GUID = '733077',
    pointsMarker_GUID = '34aa8d'
  }
}

function headquarters.getActivePlayers()
  local result = {}
  for i, zone_GUID in ipairs(turnOrderZones_GUIDs) do
    local orderBots = getObjectsByType(zone_GUID, 'orderBot')
    if #orderBots > 0 then
      local info = gmtools.parse(orderBots[1])
      table.insert(result, info.color)
    end
  end
  return result
end

function headquarters.getPassedPlayers()
  local players = {}
  for i, zone_GUID in ipairs(passOrderZones_GUIDs) do
    local engineers = getObjectsByType(zone_GUID, 'engineer')
    if #engineers > 0 then
      table.insert(players, gmtools.parse(engineers[1]).color)
    end
  end
  return players
end

function headquarters.roundEndReached()
  local activePlayers = headquarters.getActivePlayers()
  local passedPlayers = headquarters.getPassedPlayers()
  return #activePlayers == #passedPlayers
end

local function positionOrderBotAndEngineer(figures, pos)
  local engineer = getObjectFromGUID(figures.engineer_GUID)
  engineer.setPositionSmooth({-35.9 + 1.1 * pos, 1.83, -5.8}, false)
  local zonePos = getObjectFromGUID(turnOrderZones_GUIDs[pos]).getPosition()
  zonePos.y = 1.6
  local orderBot = getObjectFromGUID(figures.orderBot_GUID)
  orderBot.setLock(true)
  orderBot.setPositionSmooth(zonePos, false)
  return engineer
end

local function dealProgramCard(callback)
  local pos = getObjectFromGUID(nextProgramCardZone_GUID).getPosition()
  local card = supply.takeFast('programCard', pos, {0, 180, math.random(0, 1) * 180})
  if callback then
    Wait.condition(callback, function() return card.resting end)
  end
end

local function applyProgramCard(callback)
  local cards = getObjectsByType(nextProgramCardZone_GUID, 'programCard')
  local card = cards[1]
  local rotZ = card.getRotation().z
  card.setPositionSmooth({-50, 1.1, -3}, false)
  card.setRotationSmooth({0, 90, rotZ}, false)
  local cardNo = gmtools.parse(card).no
  local frontOrBackIndex = 1
  if rotZ > 90 then
    frontOrBackIndex = 2
  end
  local cardSetup = programCardSetups[cardNo][frontOrBackIndex]
  for i, programPosition in ipairs(programPositions) do
    local actionType = cardSetup[i]
    local programTile = getObjectFromGUID(programTiles_GUIDs[actionType])
    programTile.setPositionSmooth(programPosition, false)
    programTile.setLock(true)
  end
  if callback ~= nil then
    local cardMoved = function() return not card.isSmoothMoving() end
    Wait.condition(callback, cardMoved)
  end
end

function headquarters.setup(colors)
  local programCardsDeck = supply.getContainer('programCard')
  programCardsDeck.setLock(true)
  programCardsDeck.setPosition({-50, -4, 4})

  dealProgramCard(function() applyProgramCard(dealProgramCard) end)
  for i, color in ipairs(colors) do
    local figures = playerFigures[color]
    positionOrderBotAndEngineer(figures, i)
    getObjectFromGUID(figures.countMarker_GUID).setPositionSmooth({-39.24, 0.89 + i, -3.39}, false)
    getObjectFromGUID(figures.pointsMarker_GUID).setPositionSmooth({-41.52, 0.89 + i, -2.09}, false)
  end
end

function headquarters.nextRound(lastRound)
  local dealNextProgramCard
  if not lastRound then
    dealNextProgramCard = dealProgramCard
  end
  applyProgramCard(dealNextProgramCard)

  local passedPlayers = headquarters.getPassedPlayers()
  local lastEngineer
  for i, passedPlayer in ipairs(passedPlayers) do
    local figures = playerFigures[passedPlayer]
    lastEngineer = positionOrderBotAndEngineer(figures, i)
  end
  local enableTurns = function()
    turns.setup(passedPlayers)
  end
  Wait.condition(enableTurns, function() return not lastEngineer.isSmoothMoving() end, 3, enableTurns)
end

local function languageChanged(lang)
  for _, guid in pairs(programTiles_GUIDs) do
    getObjectFromGUID(guid).setName(msg.programTile)
  end
  for _, player in pairs(playerFigures) do
    getObjectFromGUID(player.engineer_GUID).setName(msg.engineer)
    getObjectFromGUID(player.orderBot_GUID).setName(msg.orderBot)
  end
end
i18n.registerForLanguageChange(languageChanged)
